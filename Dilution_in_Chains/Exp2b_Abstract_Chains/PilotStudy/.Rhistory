# packages
library(ez)
library(reshape2)
library(reshape)
library(ggplot2)
library(plyr)
library(pastecs)
library(ez)
library(data.table)
library(tidyverse)
library(showtext)
font_add_google("Poppins", "Poppins")
font_add_google("Roboto Mono", "Roboto Mono")
showtext_auto()
# Read in data
#tdata.wide <- read.delim("dummy_data.txt", header=TRUE, sep="\t", na.strings="NA", dec=".", strip.white=TRUE)
tdata <- read.delim("Data_abstract_chains_pretest.txt", header=TRUE, sep="\t", na.strings="NA", dec=".", strip.white=TRUE)
# to create a bar char, the data must be in long format and only contain the relevant dependent variables
# 1. make a subset with only the relevant dvs
tdata_sub <- subset(tdata, select = 1:10)
tdata_8links <- subset(tdata, Links == "eight") # thats the only condition but we use a generic code here
tdata_8links <- subset(tdata_8links, select = c(1:10))
# 2. reshape into long format
tdata_8links <- tdata_8links %>% gather(variable, value, 3:10)
tdata_8links$variable <- factor(tdata_8links$variable, levels = c("strength_1", "strength_2", "strength_3", "strength_4",
"strength_5", "strength_6", "strength_7", "strength_8"),
labels = c("1st", "2nd", "3rd", "4th", "5th", "6th", "7th", "8th"))
tdata_8links$value <- tdata_8links$value * 0.01
library(afex)
library(emmeans)
tdata_sub <- tdata_8links
a1 <- aov_car(value ~ variable + Error(sID/(variable)), tdata_sub)
a1
# Polynomial Contrasts
#library(Rcmdr)
# Quantitative Trend analysis
contrasts(tdata_sub$variable) <- "contr.poly" # define contrast coefficients
Trend <- aov(value ~ variable, data=tdata_sub)
summary.lm(Trend)
# for 8 links
tdata_sub <- tdata_8links
# same ANOVA as before
lmeModel <- lmer(value ~ variable + (1|sID), data=tdata_sub)
# follow-up analysis
ls1 <- lsmeans(a1, c("variable")) # joint evaluation (basically gives the same table)
ls1
# contrast 1st vs. 8th link
tdata_18 <- subset(tdata_8links, variable == "1st" | variable == "8th")
tdata_sub <- tdata_18
a1 <- aov_car(value ~ variable + Error(sID/(variable)), tdata_sub)
###############
# a conditional analysis
ls2 <- lsmeans(a1, c("variable")) # group means by between-condition
ls2
# simple main effects
pairs(ls2) # compares rep-measure differences separately for each between-factor level
# compute Cohen's d
library(effsize)
tdata_18$variable <- factor(tdata_18$variable, levels = c("1st", "8th"))
cohen.d(tdata_18$value, tdata_18$variable, paired= T)
cohen.d(tdata_18$value, tdata_18$variable, paired= F)
cohen.d(tdata_18$value, tdata_18$variable, paired= TRUE)
tdata_18$variable <- factor(tdata_18$variable, levels = c("1st", "8th"))
tdata_18 %>% cohens_d(value ~ variable, paired = T)
library(rstatix)
tdata_18 %>% cohens_d(value ~ variable, paired = T)
d <- 0.2649241
dat_1st <- subset(tdata_18, variable == "1st")
dat_8th <- subset(tdata_18, variable == "8th")
cor.test(dat_1st$value, dat_8th$value)
cor <- 0.03321437
n <- 100
SEd <- sqrt((1/n + d^2/n)*2*(1-cor))
SEd
cohen.d.ci(0.2649241,n=100,alpha=.05)
cohen.d.ci(0.2649241,n=100,n1=100, n2=100,alpha=.05)
cohen.d.ci(0.2649241,n=200,n1=100, n2=100,alpha=.05)
library(psych)
cohen.d.ci(0.2649241,n=200,n1=100, n2=100,alpha=.05)
# packages
library(data.table)
library(meta)
#library(metafor)
#library(dmetar)
library(showtext)
font_add_google("Poppins", "Poppins")
font_add_google("Roboto Mono", "Roboto Mono")
showtext_auto()
#tdata.wide <- read.delim("dummy_data.txt", header=TRUE, sep="\t", na.strings="NA", dec=".", strip.white=TRUE)
madata <- read.delim("EffectSizes_of_Studies.txt", header=TRUE, sep="\t", na.strings="NA", dec=".", strip.white=TRUE)
cohen.d.ci(0.2649241,n=100,n1=50, n2=50,alpha=.05)
#tdata.wide <- read.delim("dummy_data.txt", header=TRUE, sep="\t", na.strings="NA", dec=".", strip.white=TRUE)
madata <- read.delim("EffectSizes_of_Studies.txt", header=TRUE, sep="\t", na.strings="NA", dec=".", strip.white=TRUE)
# Now conduct the MA
m <- metagen(TE,
seTE,
data=madata,
studlab=paste(Author),
comb.fixed = FALSE,
comb.random = TRUE,
prediction=FALSE,
sm="SMD")
m
tes(t=2.649, n.1=100, n.2=100)
library(compute.es)
tes(t=2.649, n.1=100, n.2=100)
tdata_18 %>% cohens_d(value ~ variable, paired = T, ci = TRUE)
tdata_18 %>% cohens_d(value ~ variable,
paired = T,
ci = TRUE,
conf.level = 0.95,
ci.type = "perc",
nboot = 1000)
cohen.d.ci(0.2649241,n=100,n1=100, alpha=.05)
# based on the estimated CI
half_CI_width <- (0.47-0.07)*0.5
SE_d <- half_CI_width/1.96
SE_d
#tdata.wide <- read.delim("dummy_data.txt", header=TRUE, sep="\t", na.strings="NA", dec=".", strip.white=TRUE)
madata <- read.delim("EffectSizes_of_Studies.txt", header=TRUE, sep="\t", na.strings="NA", dec=".", strip.white=TRUE)
# Now conduct the MA
m <- metagen(TE,
seTE,
data=madata,
studlab=paste(Author),
comb.fixed = FALSE,
comb.random = TRUE,
prediction=FALSE,
sm="SMD")
m
# packages
library(ez)
library(reshape2)
library(reshape)
library(ggplot2)
library(plyr)
library(pastecs)
library(ez)
library(data.table)
library(tidyverse)
library(showtext)
font_add_google("Poppins", "Poppins")
font_add_google("Roboto Mono", "Roboto Mono")
showtext_auto()
#tdata.wide <- read.delim("dummy_data.txt", header=TRUE, sep="\t", na.strings="NA", dec=".", strip.white=TRUE)
tdata <- read.delim("Data_Exp_Abstract_Chains.txt", header=TRUE, sep="\t", na.strings="NA", dec=".", strip.white=TRUE)
# demographics
tdata_age <- tdata
min(tdata_age$Age)
max(tdata_age$Age)
mean(tdata_age$Age)
sd(tdata_age$Age)
# 1 = male, 2 = female, 3 = other
table(tdata$Sex)
# reorder factor
#tdata <- subset(tdata, Last_Node_Answer == "correct")
tdata$Order <- factor(tdata$Order, levels = c("four_eight", "eight_four")) # Order in which chains were shown to subjects
# to create a bar char, the data must be in long format and only contain the relevant dependent variables
# 1. make a subset with only the relevant dvs
tdata_sub <- subset(tdata, select = 1:14)
tdata_4links <- subset(tdata_sub, select = c(1,2,3,5,7,9))
tdata_8links <- subset(tdata_sub, select = c(1,2,4,6,8,10:14))
# 2. reshape into long format
tdata_4links <- tdata_4links %>% gather(variable, value, 3:6)
tdata_8links <- tdata_8links %>% gather(variable, value, 3:10)
tdata_4links$variable <- factor(tdata_4links$variable, levels = c("strength_1_4", "strength_2_4", "strength_3_4",
"strength_4_4"),
labels = c("1st", "2nd", "3rd", "4th"))
tdata_8links$variable <- factor(tdata_8links$variable, levels = c("strength_1_8", "strength_2_8", "strength_3_8",
"strength_4_8", "strength_5_8", "strength_6_8",
"strength_7_8", "strength_8_8"),
labels = c("1st", "2nd", "3rd", "4th", "5th", "6th", "7th", "8th"))
tdata_4links$value <- tdata_4links$value * 0.01 # Recode DV so that values range from 0 to 1
tdata_8links$value <- tdata_8links$value * 0.01
myTheme <- theme(plot.title = element_text(face="bold", size = 22),
axis.title.x = element_text(face = "bold", size = 20),
axis.title.y = element_text(face = "bold", size = 20),
axis.text.x = element_text(size = 18, angle = 0),
axis.text.y = element_text(size = 14, angle = 0),
legend.text = element_text(size = 18),
legend.title = element_text(face = "bold", size = 18),
strip.text.x = element_text(size = 18),
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"),
axis.text = element_text(colour ="black"),
axis.ticks = element_line(colour ="black"))
library(see)
tdata_sub <- tdata_4links
## first, turn sID into a factor
tdata_sub$sID <- factor(tdata_sub$sID)
pd <- position_dodge(width = 0.3)
tdata_sub$valueJitter <- jitter(tdata_sub$value, factor = 1, amount = 0.04)
theme_set(theme_light(base_size = 20, base_family = "Poppins"))
# new labes for the facets
#process.labs <- c("Process: Generative", "Process: Preventive")
#names(process.labs) <- c("generative", "preventive")
#valence.labs <- c("Effect valence: Positive", "Effect Valence: Negative")
#names(valence.labs) <- c("positive", "negative")
g <- ggplot(tdata_sub, aes(x=variable, y=valueJitter, group = sID)) +
guides(fill=FALSE)+
#facet_grid(Valence ~ Process, labeller = labeller(Process = process.labs, Valence = valence.labs))+
#ggtitle("Subjects' causal srength ratings") +
scale_y_continuous(limits = c(-0.05, 1.05), breaks=seq(0, 1, 0.1), expand = c(0,0)) +
#scale_x_discrete(labels=c("Downward chain", "Upward chain")) +
#stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black", alpha =0.5) +
geom_violinhalf(aes(y = value, group = variable), color = NA, position=position_dodge(1), alpha = 0.2)+
geom_line(position = pd, color = "red", size = 1, alpha=0.04) +
geom_point(position = pd, alpha = 0.2, fill = "red", color = "red") +
stat_summary(aes(y = value,group=1), fun.data = mean_cl_boot, geom = "errorbar", width = 0, size = 1) +
stat_summary(aes(y = value,group=1), fun.y=mean, colour="red", geom="line",group=1, size = 1.5, linetype = "solid", alpha = 0.6)+
stat_summary(aes(y = value,group=1), fun.y=mean, geom="point", color = "black", fill = "red", shape = 22, size = 5, group=1, alpha = 0.8)+
stat_summary(aes(y = value,group=1), fun.y=median, geom="point", color = "black", shape = 3, size = 4, group=1, alpha = 1, position = position_dodge(width = 0.5))+
labs(x = "Link of Chain", y = "Causal Strength Rating") +
#scale_color_manual(name = "Entity",values=c("#fc9272", "#3182bd"))+
#scale_fill_manual(name = "Entity",values=c("#fc9272", "#3182bd"))+
theme(legend.position = "none")+
myTheme
g
#ggsave("results_lines4.svg",width=7,height=6)
#ggsave("results_lines4.pdf",width=7,height=6)
myTheme <- theme(plot.title = element_text(face="bold", size = 22),
axis.title.x = element_text(face = "bold", size = 20),
axis.title.y = element_text(face = "bold", size = 20),
axis.text.x = element_text(size = 18, angle = 0),
axis.text.y = element_text(size = 14, angle = 0),
legend.text = element_text(size = 18),
legend.title = element_text(face = "bold", size = 18),
strip.text.x = element_text(size = 18),
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"),
axis.text = element_text(colour ="black"),
axis.ticks = element_line(colour ="black"))
library(see)
tdata_sub <- tdata_8links
## first, turn sID into a factor
tdata_sub$sID <- factor(tdata_sub$sID)
pd <- position_dodge(width = 0.3)
tdata_sub$valueJitter <- jitter(tdata_sub$value, factor = 1, amount = 0.04)
theme_set(theme_light(base_size = 20, base_family = "Poppins"))
# new labes for the facets
#process.labs <- c("Process: Generative", "Process: Preventive")
#names(process.labs) <- c("generative", "preventive")
#valence.labs <- c("Effect valence: Positive", "Effect Valence: Negative")
#names(valence.labs) <- c("positive", "negative")
g <- ggplot(tdata_sub, aes(x=variable, y=valueJitter, group = sID)) +
guides(fill=FALSE)+
#facet_grid(Valence ~ Process, labeller = labeller(Process = process.labs, Valence = valence.labs))+
#ggtitle("Subjects' causal srength ratings") +
scale_y_continuous(limits = c(-0.05, 1.05), breaks=seq(0, 1, 0.1), expand = c(0,0)) +
#scale_x_discrete(labels=c("Downward chain", "Upward chain")) +
#stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black", alpha =0.5) +
geom_violinhalf(aes(y = value, group = variable), color = NA, position=position_dodge(1), alpha = 0.2)+
geom_line(position = pd, color = "red", size = 1, alpha=0.04) +
geom_point(position = pd, alpha = 0.2, fill = "red", color = "red") +
stat_summary(aes(y = value,group=1), fun.data = mean_cl_boot, geom = "errorbar", width = 0, size = 1) +
stat_summary(aes(y = value,group=1), fun.y=mean, colour="red", geom="line",group=1, size = 1.5, linetype = "solid", alpha = 0.6)+
stat_summary(aes(y = value,group=1), fun.y=mean, geom="point", color = "black", fill = "red", shape = 22, size = 5, group=1, alpha = 0.8)+
stat_summary(aes(y = value,group=1), fun.y=median, geom="point", color = "black", shape = 3, size = 4, group=1, alpha = 1, position = position_dodge(width = 0.5))+
labs(x = "Link of Chain", y = "Causal Strength Rating") +
#scale_color_manual(name = "Entity",values=c("#fc9272", "#3182bd"))+
#scale_fill_manual(name = "Entity",values=c("#fc9272", "#3182bd"))+
theme(legend.position = "none")+
myTheme
g
#ggsave("results_lines8.svg",width=7,height=6)
#ggsave("results_lines8.pdf",width=7,height=6)
################################################################################################################
##################################### Statistical Analyses #####################################################
################################################################################################################
library(pastecs)
library(lme4)
library(nlme)
library(ez)
##################################### Create descriptive stats ###################################
by(tdata_sub$value, list(tdata_sub$variable), stat.desc , basic = FALSE)
##################################### Model ######################################################
tdata_sub <- tdata_4links
by(tdata_sub$value, list(tdata_sub$variable), stat.desc , basic = FALSE)
library(afex)
library(emmeans)
tdata_sub <- tdata_8links
a1 <- aov_car(value ~ variable + Error(sID/(variable)), tdata_sub)
a1
# Polynomial Contrasts
#library(Rcmdr)
# Quantitative Trend analysis
contrasts(tdata_sub$variable) <- "contr.poly" # define contrast coefficients
Trend <- aov(value ~ variable, data=tdata_sub)
summary.lm(Trend)
# now the same analysis for the condition with 4 links
library(afex)
library(emmeans)
tdata_sub <- tdata_4links
a1 <- aov_car(value ~ variable + Error(sID/(variable)), tdata_sub)
a1
# Polynomial Contrasts
#library(Rcmdr)
# Quantitative Trend analysis
contrasts(tdata_sub$variable) <- "contr.poly" # define contrast coefficients
Trend <- aov(value ~ variable, data=tdata_sub)
summary.lm(Trend)
# for 8 links
tdata_sub <- tdata_8links
# same ANOVA as before
lmeModel <- lmer(value ~ variable + (1|sID), data=tdata_sub)
# follow-up analysis
ls1 <- lsmeans(a1, c("variable")) # joint evaluation (basically gives the same table)
ls1
# contrast 1st vs. 8th link
tdata_18 <- subset(tdata_8links, variable == "1st" | variable == "8th")
tdata_sub <- tdata_18
a1 <- aov_car(value ~ variable + Error(sID/(variable)), tdata_sub)
# contrast
ls2 <- lsmeans(a1, c("variable")) # group means by between-condition
ls2
# simple main effects
t <- pairs(ls2) # compares rep-measure differences separately for each between-factor level
t
confint(t, adjust = "none")
t <- qt(0.975, 99, lower.tail = TRUE, log.p = FALSE) # get the correct t-Value
effect <- "Mdiff"
Mdiff <- 0.129  # the estimated difference from the output above
SE <- 0.0323  # its SE
CI <- SE*t
CI_low <- Mdiff - CI
CI_up <- Mdiff + CI
Mdiff
CI_low
CI_up
# Plot
myTheme <- theme(plot.title = element_text(face="bold", size = 22),
axis.title.x = element_text(face = "bold", size = 20),
axis.title.y = element_text(face = "bold", size = 20),
axis.text.x = element_text(size = 18, angle = 0),
axis.text.y = element_text(size = 25, angle = 0),
legend.text = element_text(size = 18),
legend.title = element_text(face = "bold", size = 18),
strip.text.x = element_text(size = 18),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
#panel.background = element_blank(),
axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"),
axis.text = element_text(colour ="black"),
axis.ticks = element_line(colour ="black"))
theme_set(theme_light(base_size = 30, base_family = "Poppins"))
barchart <- ggplot()+
myTheme+
#guides(fill=FALSE)+
#facet_wrap(~Latency + SampleSize, ncol=2)+
#ggtitle("Mean difference (95% CI)") +
#coord_cartesian(ylim=c(-0.1,2)) +
scale_y_continuous(limits = c(-0.1, 0.5), breaks=seq(-0.1, 0.5, 0.1), expand = c(0,0)) +
scale_x_discrete(labels=c("r")) +
#annotate("rect", xmin=1.7, xmax=2.3, ymin=0.95, ymax=1.05, color="#31a354", fill = "white", size = 1) +
#stat_summary(fun.y=mean, colour="grey20", geom="point", shape = 21, size = 3)+
#stat_summary(fun.y = mean, geom = "bar", position = "dodge", colour = "black")+
#stat_summary(fun.data = mean_cl_boot, geom = "errorbar", position = position_dodge(width = 0.90), width = 0.2) +
#geom_jitter(width = 0.3, height = 0.02, alpha = 0.6, colour = "red") +
#ggtitle("Means (95% bootstr. CIs)") +
#theme(axis.text.x = element_text(size = 10, angle = 0, hjust = 0.5))+
labs(x= "", y = "1st - 8th Link") +
#scale_color_manual(values=c("#005083",  "#f0b64d"))# +
#scale_fill_manual(values=c("#969696",  "#969696"))
#annotate("point", x = 1, y = 100, colour = "firebrick", size = 2)+
#annotate(xmin = -Inf, xmax = Inf, ymin = 4.77-1.96*0.297, ymax = 4.77+1.96*0.297, geom = "rect", alpha = 0.2, fill = "firebrick")+
#annotate(xmin = -Inf, xmax = Inf, ymin = 5.02-1.96*0.372, ymax = 5.02+1.96*0.372, geom = "rect", alpha = 0.2, fill = "blue")+
#annotate(geom = "hline",yintercept = 100, y = 100, color = "red")+
annotate("pointrange", x = 1, y = Mdiff, ymin = CI_low, ymax = CI_up, colour = "black", size = 1.5, shape = 24, fill = "darkgrey")+
#annotate("pointrange", x = 2, y = 5.02, ymin = 5.02-1.96*0.372, ymax = 5.02+1.96*0.372, colour = "blue", size = 0.8, shape = 15)+
#annotate("text", x = 0.5, y = 2.6, family = "Poppins", size = 6, color = "gray20", label = "Impfeffekt")+
#geom_curve(aes(x = 0.5, y = 3, xend = 0.9, yend = 4),arrow = arrow(length = unit(0.03, "npc")),color = "gray20", curvature = +0.2)+
#annotate("text", x = 1.8, y = 2.6, family = "Poppins", size = 6, color = "gray20", label = "Dosierungseffekt")+
#geom_curve(aes(x = 1.8, y = 3, xend = 2, yend = 4),arrow = arrow(length = unit(0.03, "npc")),color = "gray20", curvature = +0.2)+
annotate(geom = "hline",yintercept = 0, y = 0, color = "red", size = 1.2)+
theme(plot.background = element_rect(
fill = "white",
colour = "black",
size = 1
),
axis.title.y = element_text(size = 30))
barchart
#ggsave("delta_1st_vs_8th.svg",width=2.5,height=4)
ggsave("delta_1st_vs_8th.pdf",width=2.5,height=4)
tdata_18$variable <- factor(tdata_18$variable, levels = c("1st", "8th"))
library(effsize)
cohen.d(tdata_18$value,tdata_18$variable, paired = T)
